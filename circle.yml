machine:
  services:
    - postgresql
    - docker

dependencies:
  cache_directories:
    - "~/cache/"
  override:
    - docker info
    # use circleci's docker cache workaround
    - if [ -e ~/cache/docker/image.tar ]; then echo "Loading image.tar"; docker load -i ~/cache/docker/image.tar || rm ~/cache/docker/image.tar; fi
    # build image
    - docker build -t normandy:build .
    # Clean up old image and save the new one
    - mkdir -p ~/cache/docker; test '!' -e ~/cache/docker/image.tar || rm ~/cache/docker/image.tar; docker save normandy:build > ~/cache/docker/image.tar; ls -l ~/cache/docker
    # Get MaxMind GeoIP database
    - cd ~/cache/ && ~/normandy/bin/download_geolite2.sh

test:
  pre:
    - chmod -R 777 $CIRCLE_TEST_REPORTS
  override:
    - >
      docker run --net host -e DJANGO_CONFIGURATION=Test
      -v $CIRCLE_TEST_REPORTS:/test_artifacts
      -v ~/cache/GeoLite2-Country.mmdb:/app/GeoLite2-Country.mmdb
      normandy:build py.test --junitxml=/test_artifacts/pytest.xml

# appropriately tag and push the container to dockerhub
deployment:
  latest:
    branch: master
    commands:
      # set DOCKER_DEPLOY=true in Circle UI to do deploys
      - "${DOCKER_DEPLOY:-false}"
      - bin/deploy/dockerhub.sh latest

  tags:
    # push all tags
    tag: /.*/
    commands:
      # set DOCKER_DEPLOY=true in Circle UI to do deploys
      - "${DOCKER_DEPLOY:-false}"
      - bin/deploy/dockerhub.sh "$CIRCLE_TAG"
